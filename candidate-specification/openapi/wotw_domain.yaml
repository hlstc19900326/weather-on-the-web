openapi: 3.0.2
info:
    title: weather_on_the_web_core
    description: 'Core methods for Weather on the Web API''s'
    version: 1.0.0
servers:
    -
        url: 'http://data.example.org/wotw'
        description: ""
paths:
    /:
        get:
            tags:
                - Capabilities
            summary: 'landing page of this API'
            description: 'The landing page provides links to the API definition, the Conformance statements and the metadata about the feature data in this dataset.'
            operationId: getLandingPage
            responses:
                '200':
                    description: 'links to the API capabilities'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/root'
                        text/html:
                            schema:
                                type: string
            parameters:
            -
                $ref: '#/components/parameters/outputFormat'                              
    /conformance:
        get:
            tags:
                - Capabilities
            summary: 'information about standards that this API conforms to'
            description: 'list all requirements classes specified in a standard that the server conforms to'
            operationId: getRequirementsClasses
            responses:
                '200':
                    description: 'the URIs of all requirements classes supported by the server'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/req-classes'
                        text/html:
                            schema:
                                type: string
            parameters:
              -
                  $ref: '#/components/parameters/outputFormat'                                
    /groups:
        get:
            tags:
                - Capabilities
            summary: 'Provide a list of avialable data groups'
            operationId: listGroups
            responses:
                '200':
                    description: 'List the available data groups.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groups'
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
            parameters:
              -
                 $ref: '#/components/parameters/outputFormat'
    '/groups/{groupId}':
        get:
            tags:
                - Capabilities
            summary: 'List of links to information available in the group'
            operationId: groupInfomation
            responses:
                '200':
                    description: 'List the available data for a group.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/groups'
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string        
        parameters:
            -
                $ref: '#/components/parameters/groupId'
            -
                $ref: '#/components/parameters/bbox'
            -
                $ref: '#/components/parameters/time'
            -
                $ref: '#/components/parameters/outputFormat'
    /collections:
        get:
            tags:
                - Capabilities
            summary: 'List the avialable collections from the service'
            operationId: listCollections
            responses:
                '200':
                    description: 'Metdata about the weather on the web collections shared by this API.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/content'
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
        parameters:
            -
                $ref: '#/components/parameters/bbox'
            -
                $ref: '#/components/parameters/time'
            -
                $ref: '#/components/parameters/outputFormat'
    '/collections/{collectionId}':
        get:
            tags:
                - Metadata
            summary: 'list data instances of  {collectionId}'
            description: 'This will provide information about the available instances for the chosen collection Use content negotiation to request HTML or GeoJSON.'
            operationId: getCollection
            responses:
                '200':
                    description: 'Metadata about the {collectionId} collection shared by this API.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/collectionDetail'
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
        parameters:
            -
                $ref: '#/components/parameters/collectionId'
            -
                $ref: '#/components/parameters/outputFormat'                  
    '/collections/{collectionId}/{instanceId}':
        get:
            tags:
                - Metadata
            summary: 'list data instances of  {collectionId}'
            description: 'This will provide metadata for the chosen instance of a collection Use content negotiation to request HTML or GeoJSON.'
            operationId: getCollectionInstance
            responses:
                '200':
                    description: 'Metadata about the instance of  {collectionId} collection shared by this API.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/instanceDetail'
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
        parameters:
            -
                $ref: '#/components/parameters/collectionId'
            -
                $ref: '#/components/parameters/instanceId'
            -
                $ref: '#/components/parameters/outputFormat'                

    '/collections/{collectionId}/{instanceId}/point':
        get:
            tags:
                - Data
            summary: 'Query end point for point queries of instance {instanceId} of collection {collectionId}'
            description: 'Query end point for point queries'
            operationId: getDataFromPoint
            parameters:
                -
                    $ref: '#/components/parameters/collectionId'
                -
                    $ref: '#/components/parameters/instanceId'
                -
                    name: parametername
                    in: query
                    description: "comma delimited list of parameters to retrieve data for.  Valid parameters are\nlisted in the collections metadata"
                    required: false
                    explode: false
                    schema:
                        minItems: 1
                        type: array
                        items:
                            type: string
                -
                    name: time
                    in: query
                    description: 'Period to return data for in the RFC 3339 profile of ISO 8601, datetime values MUST be defined to seconds i.e. 2019-02-05T21:15:00 (YYYY-MM-DDTHH:MM:SSZ).  A time range MUST be defined as Start_Time/End_Time i.e. (2019-02-05T21:15:00Z/2019-02-06T12:45:00Z) and time range with fixed intervals MUST be defined as Intervals/Start_Time/End_Time i.e. (R6/2019-02-05T21:15:00Z/2019-02-05T22:45:00Z would be 15 minute timesteps between 2019-02-05T21:15:00Z and 019-02-05T22:45:00Z)'
                    required: false
                    schema:
                        format: date-time
                        type: string
                -
                    name: crs
                    in: query
                    description: 'The EPSG code for the coordinate system of the X and Y values (i.e. EPSG:3857), if not defined X and Y will default to EPSG:4326 longitude and latitude values'
                    schema:
                        type: string
                -
                    name: outputFormat
                    in: query
                    description: 'Data format to return the query results in (if not specified this will default to CoverageJSON)'
                    required: false
                    schema:
                        enum:
                            - CoverageJSON
                            - netCDF
                            - GML
                -
                    name: interpolation
                    in: query
                    description: "This defines the algorithm that identifies the best data match for the requested location\nThe valid interpolation method values are available in the results of the \ncapabilities query methods of this API\n"
                    schema:
                        type: string
                -
                    name: coords
                    in: query
                    description: "location(s) to return data for, the coordinates are defined by a Well Known Text\n(wkt) string. to retrieve a single location :\n\nPOINT(x y) i.e. POINT(0,51.48) for Greenwich, London\n\nAnd for a list of locations\n\nMULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))\n\ni.e.\nMULTIPOINT((38.9 -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))\n\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\nthe coordinate values will depend on the CRS parameter, if this is not defined\nthe values will be assumed to WGS85 values (i.e x=longitude and y=latitude)\n"
                    required: true
                    schema:
                        type: string
                -
                    $ref: '#/components/parameters/outputFormat'                        
            responses:
                '200':
                    description: 'Data ranges required to construct valid queries for the choosen data collection'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoverageJSON'
                        application/x-netcdf: {}
                        text/xml: {}
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
    '/collections/{collectionId}/{instanceId}/polygon':
        get:
            tags:
                - Data
            summary: 'Query end point for area queries of instance {instanceId} of collection {collectionId} defined by a polygon'
            description: 'Return the data values for the data Polygon defined by the query parameters'
            operationId: GetDataFromArea
            parameters:
                -
                    $ref: '#/components/parameters/collectionId'
                -
                    $ref: '#/components/parameters/instanceId'
                -
                    name: parametername
                    in: query
                    description: "comma delimited list of parameters to retrieve data for.  Valid parameters are\nlisted in the collections metadata"
                    required: false
                    explode: false
                    schema:
                        minItems: 1
                        type: array
                        items:
                            type: string
                -
                    name: outputFormat
                    in: query
                    description: 'Data format of the returned the data values'
                    required: true
                    schema:
                        enum:
                            - application/json
                            - application/x-netcdf
                            - application/x-grib
                        type: string
                -
                    name: crs
                    in: query
                    description: "Coordinate system that the data should be returned in, defined as an EPSG code \nvalue e.g. EPSG:4326.  If not specified output will be in the native coordinate \nsystem of the data"
                    required: false
                    schema:
                        type: string
                -
                    name: coords
                    in: query
                    description: "Only data that has a geometry that intersects the area defined by the polygon\nare selected. \n\nThe polygon is defined using a Well Known Text string following \n\ncoords=POLYGON((x y,x1 y1,x2 y2,...,xn yn x y))\n\nwhich are values in the coordinate system defined by the crs query parameter \n(if crs is not defined the values will be assumed to be WGS84 longitude/latitude coordinates).  \n\nFor instance a polygon that roughly describes an area that contains \nSouth West England in WGS84 would look like: \n\ncoords=POLYGON((-6.1 50.3,-4.35 51.4,-2.6 51.6,-2.8 50.6,-5.3 49.9,-6.1,50.3))\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n\nThe coords parameter will only support 2D POLYGON definitions"
                    required: true
                    schema:
                        type: string
                -
                    name: time
                    in: query
                    description: "Either a date-time or a period string that adheres to RFC 3339, Only data that \nhas a temporal property that intersects the value of time are selected. \n\n datetime values MUST be defined to seconds i.e. 2019-02-05T21:15:00 (YYYY-MM-DDTHH:MM:SSZ). A time range MUST be defined as Start_Time/End_Time i.e. (2019-02-05T21:15:00Z/2019-02-06T12:45:00Z) and time range with fixed intervals MUST be defined as Repition/Start_Time/End_Time i.e. (R3/2019-02-05T21:15:00Z/2019-02-05T22:00:00Z would be 15 minute timesteps between 2019-02-05T21:15:00Z and 019-02-05T22:00:00Z) \n "
                    required: false
                    schema:
                        type: string
                -
                    name: interpolationX
                    in: query
                    description: "This is defined if the query doesn't require data at its native X coordinate resolution, the format is:\n\ninterpolationX=R<interpolation resolution>/<interpolation method> e.g. interpolationX=R15/linear\n\nThe interpolation resolution is the number of intervals the user requires between the minimum X value of the bounding box and the maximum X value of the bounding box.\n\nThe valid interpolation method values are available in the results of the capabilities query methods of this API\n\n"
                    schema:
                        type: string
                -
                    name: interpolationY
                    in: query
                    description: "This is defined if the query doesn't require data at its native Y coordinate \nresolution, the format is:\n\ninterpolationY=R<interpolation resolution>/<interpolation method> \ne.g.\ninterpolationY=R5/linear\n\nThe interpolation resolution is the number of intervals the user requires between\nthe minimum Y value of the bounding box and the maximum Y value of the bounding box.\n\nThe valid interpolation method values are available in the results of the \ncapabilities query methods of this API\n"
                    schema:
                        type: string
                -
                    name: z
                    in: query
                    description: "Define the vertical level to return data from \ni.e. Z=level\n\nfor instance if the 850hPa pressure level is being queried\n\nZ=850\n\nWhen not specified data from the lowest (i.e. nearest the surface) level of\ndata in the collection.\n"
                    schema:
                        type: string
                -
                    $ref: '#/components/parameters/outputFormat'                        
                        
            responses:
                '200':
                    description: 'A coverage'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoverageJSON'
                        application/x-netcdf:
                            schema:
                                format: binary
                                type: string
                        application/x-grib:
                            schema:
                                format: binary
                                type: string
                        text/html:
                            schema:
                                type: string
                default:
                    description: 'An error occured.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/exception'
                        text/html:
                            schema:
                                type: string
    '/collections/{collectionId}/{instanceId}/trajectory':
        summary: 'query the collection data'
        description: 'Return the data requested with the chosen parameters'
        get:
            tags:
                - Data
            summary: Trajectory query
            description: 'Returns data for a route based on the values passed in the coordinate query parameters.'
            operationId: getTrajectoryData
            responses:
                '200':
                    description: Data
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CoverageJSON'
                        application/x-netcdf: {}
                        application/x-grib: {}
        parameters:
            -
                $ref: '#/components/parameters/collectionId'
            -
                $ref: '#/components/parameters/instanceId'
            -
                name: parametername
                in: query
                description: "comma delimited list of parameters to retrieve data for.  Valid parameters are\nlisted in the collections metadata"
                required: false
                explode: false
                schema:
                    minItems: 1
                    type: array
                    items:
                        type: string
            -
                name: crs
                in: query
                description: 'The EPSG code for the coordinate system of the X and Y values (i.e. EPSG:3857), if not defined X and Y will default to EPSG:4326 longitude and latitude values'
                schema:
                    type: string
            -
                name: outputFormat
                in: query
                description: 'Data format to return the query results in (if not specified this will default to CoverageJSON)'
                required: false
                schema:
                    enum:
                        - CoverageJSON
                        - netCDF
                        - GML
            -
                name: interpolationX
                in: query
                description: "This is defined if the query doesn't require data at its native resolution, the format is:\n\ninterpolationX=R<interpolation resolution>/<interpolation method> \n\ne.g. \ninterpolationX=R15/linear\n\nThe interpolation resolution is the number of intervals the user requires widthin the defined corridor_width value\n\nThe valid interpolation method values are available in the collection metadata\n\n"
                schema:
                    type: string
            -
                name: interpolationZ
                in: query
                description: "\n\nBusiness rule for interpolating the requested height coordinates from the available \ndata. The format is R{interpolated resolution}/{interpolation method}\n\nexample:\n\n\ninterpolationZ=R10/log_pressure\n\nWould request the 10 vertical levels within the range defined in the corridor_height parameter.\n\nA list of valid interpolation methods for the coordinate will be listed by the \ncapabilites response from the API\n"
                schema:
                    type: string
            -
                name: collectionid
                in: path
                description: 'Unique idenfifier for the collection'
                required: true
                schema:
                    type: string
            -
                name: coords
                in: query
                description: "Coordinates which describe the path to return data for, the values are \ndescribed as a Well Known Text LINESTRING.\n\nThe query supports either 2D LINESTRINGS(x,y),3D LINESTRINGS(x,y,m) or 4D LINESTRINGS(x,y,z,m) \nto define a trajectory where:\n\nx is the x position, \ny is the y position, \nz is the height value, \nm is the time at the coordinate as an epoc value.\n\ni.e. with no level defined or time defined:\ncoords=LINESTRING (x y,x1 y1,x2 y2)\n\ni.e. with a time defined for each point:\ncoords=LINESTRING (x y m,x1 y1 m1,x2 y2 m2)\n\ni.e. with a time and height defined for each point:\ncoords=LINESTRING (x y z m,x1 y1 z1 m1,x2 y2 z2 m2)\n\nExample:\nAlong a path (collection does not include height values)\ncoords=LINESTRING (-2.4 52.5 1554015600,-1.4 53.5 1554019200,1.1 53.75 1554023700)\n\nAlong a path (collection that includes height values)\ncoords=LINESTRING (-2.4 52.5 800 1554015600,-1.4 53.5 850 1554019200,1.1 53.75 900 1554023700)\n \nThe coordinate values for x, y and z will be defined by the crs value, if no\ncrs is defined the x and y coordinates will be assumed to be WGS84 latitude and\nlongitude values and any z coordinate default to the units of the source data.\n\nsee http://portal.opengeospatial.org/files/?artifact_id=25355 and https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\nand https://en.wikipedia.org/wiki/Unix_time"
                required: true
                schema:
                    type: string
            -
                name: corridor_width
                in: query
                description: "Defines the distance around the defined coordinates to retreive data for with\nthe units that the distance is measure in:\n\ncorridor_width=<width_value>/<width_units>\n\ni.e.\ncorridor_width=50/km\n\nValid width units will be defined in the Collection metadata, if no units are defined in the metadata then the width values will be based\non the native coordinate system.\n\n\n\n\n"
                schema:
                    type: string
            -
                name: corridor_height
                in: query
                description: "Defines the distance around the defined coordinates to retreive data for with\nthe units that the distance is measure in:\n\ncorridor_height=<height_value>/<height_units>\n\ni.e.\ncorridor_height=50/hPa\n\nValid height units will be defined in the Collection metadata, if no units are defined in the metadata then the height values will be based\non the native coordinate system.\n"
                schema:
                    type: string
            -
                $ref: '#/components/parameters/outputFormat'                        
                    
components:
    schemas:
        exception:
            required:
                - code
            type: object
            properties:
                code:
                    type: string
                description:
                    type: string
        root:
            required:
                - links
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/'
                            rel: self
                            type: application/json
                            title: 'this document'
                        -
                            href: 'http://data.example.org/api'
                            rel: service
                            type: application/openapi+json;version=3.0
                            title: 'the API definition'
                        -
                            href: 'http://data.example.org/conformance'
                            rel: conformance
                            type: application/json
                            title: 'WFS 3.0 conformance classes implemented by this server'
                        -
                            href: 'http://data.example.org/groups'
                            rel: data
                            type: application/json
                            title: 'List of available groups'
                        -
                            href: 'http://data.example.org/collections'
                            rel: data
                            type: application/json
                            title: 'List the available collections'

        req-classes:
            required:
                - conformsTo
            type: object
            properties:
                conformsTo:
                    type: array
                    items:
                        type: string
                    example:
                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/core'
                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/oas30'
                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/html'
                        - 'http://www.opengis.net/spec/wfs-1/3.0/req/geojson'
        bbox:
          type: array
          minItems: 4
          maxItems: 6
          items:
            type: number                        
        link:
            required:
                - href
            type: object
            properties:
                href:
                    type: string
                rel:
                    type: string
                    example: prev
                type:
                    type: string
                    example: application/geo+json
                hreflang:
                    type: string
                    example: en
        groups:
            required:
                - links
                - members
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections.json'
                            rel: self
                            type: application/json
                            title: 'this document'
                        -
                            href: 'http://data.example.org/collections.html'
                            rel: alternate
                            type: text/html
                            title: 'this document as HTML'
                        -
                            href: 'http://schemas.example.org/1.0/foobar.xsd'
                            rel: describedBy
                            type: application/xml
                            title: 'XML schema for Acme Corporation data'
                members:
                    type: array
                    items:
                      type: array
                      items:
                         $ref: '#/components/schemas/link'
        content:
            required:
                - links
                - collections
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections.json'
                            rel: self
                            type: application/json
                            title: 'this document'
                        -
                            href: 'http://data.example.org/collections.html'
                            rel: alternate
                            type: text/html
                            title: 'this document as HTML'
                        -
                            href: 'http://schemas.example.org/1.0/foobar.xsd'
                            rel: describedBy
                            type: application/xml
                            title: 'XML schema for Acme Corporation data'
                collections:
                    type: array
                    items:
                        $ref: '#/components/schemas/collectionInfo'

        collectionInfo:
            required:
                - id
                - links
            type: object
            properties:
                id:
                    description: 'identifier for the instance of the collection'
                    type: string
                    example: '2019-08-01T00:00:00Z'
                title:
                    description: 'human readable title for the collection instance'
                    type: string
                    example: '2019-08-01T00:00:00Z model run'
                description:
                    description: 'a description of the collection instance'
                    type: string
                    example: 'Global surface values from the 2019-08-01T00:00:00Z model run'
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections/observations'
                            rel: item
                            type: application/geo+json
                            title: 'Observation data'
                        -
                            href: 'http://example.org/concepts/building.html'
                            rel: describedBy
                            type: text/html
                            title: 'List of available observation types'
                extent:
                    $ref: '#/components/schemas/bbox'
                crs:
                    description: 'The coordinate reference systems in which geometries may be retrieved. Coordinate reference systems are identified by a URI. The first coordinate reference system is the coordinate reference system that is used by default. This is always "http://www.opengis.net/def/crs/OGC/1.3/CRS84", i.e. WGS84 longitude/latitude.'
                    default:
                        - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
                    type: array
                    items:
                        type: string
        collectionDetail:
            required:
                - links
                - instances
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections/observations'
                            rel: item
                            type: application/geo+json
                            title: 'Observation data'
                        -
                            href: 'http://example.org/concepts/building.html'
                            rel: describedBy
                            type: text/html
                            title: 'List of available observation types'
                instances:
                    type: array
                    items:
                      $ref: '#/components/schemas/instanceInfo'
        instanceInfo:
            required:
                - id
                - links
            type: object
            properties:
                id:
                    description: 'identifier for the instance of the collection'
                    type: string
                    example: '2019-08-01T00:00:00Z'
                title:
                    description: 'human readable title for the collection instance'
                    type: string
                    example: '2019-08-01T00:00:00Z model run'
                description:
                    description: 'a description of the collection instance'
                    type: string
                    example: 'Global surface values from the 2019-08-01T00:00:00Z model run'
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections/observations'
                            rel: item
                            type: application/geo+json
                            title: 'Observation data'
                        -
                            href: 'http://example.org/concepts/building.html'
                            rel: describedBy
                            type: text/html
                            title: 'List of available observation types'
                extent:
                    $ref: 'https://raw.githubusercontent.com/opengeospatial/oapi_common/master/OAPI-Common/openapi/schemas/extent.yaml'
                crs:
                    description: 'The coordinate reference systems in which geometries may be retrieved. Coordinate reference systems are identified by a URI. The first coordinate reference system is the coordinate reference system that is used by default. This is always "http://www.opengis.net/def/crs/OGC/1.3/CRS84", i.e. WGS84 longitude/latitude.'
                    default:
                        - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
                    type: array
                    items:
                        type: string
        instanceDetail:
            required:
                - links
                - collection
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/link'
                    example:
                        -
                            href: 'http://data.example.org/collections/observations'
                            rel: item
                            type: application/geo+json
                            title: 'Observation data'
                        -
                            href: 'http://example.org/concepts/building.html'
                            rel: describedBy
                            type: text/html
                            title: 'List of available observation types'
                collection:
                  type: object
                  properties:
                    id:
                        description: 'identifier for the instance of the collection'
                        type: string
                        example: '2019-08-01T00:00:00Z'
                    title:
                        description: 'human readable title for the collection instance'
                        type: string
                        example: '2019-08-01T00:00:00Z model run'
                    description:
                        description: 'a description of the collection instance'
                        type: string
                        example: 'Global surface values from the 2019-08-01T00:00:00Z model run'
                    extent:
                      $ref: '#/components/schemas/collection_extent'
                    links:
                      type: array
                      items:
                        $ref: '#/components/schemas/link'
                    parameters:
                      type: array
                      items:
                        $ref: '#/components/schemas/Parameter'
                    outputCRS:
                      type: array
                      items:
                        $ref: '#/components/schemas/outputCRS'
                    interpolationX:
                      description: 'X coordinate interpolation options'
                      type: array
                      items:
                        type: string
                    interpolationY:
                      description: 'Y coordinate interpolation options'
                      type: array
                      items:
                        type: string
                    interpolationZ:
                      description: 'Z coordinate interpolation options'
                      type: array
                      items:
                        type: string
                    outputFormat:
                      description: 'output format options for the query'
                      type: array
                      items:
                        type: string

        collection_extent:
            description: 'Definition of the geo-temporal extent of the collection instance'
            required:
                - dimensions
                - wkt
                - horizontal
            type: object
            properties:
                dimensions:
                    $ref: '#/components/schemas/dimension'
                wkt:
                    description: "Well Known Text description of the collections coordinate reference system\n\nsee http://docs.opengeospatial.org/is/12-063r5/12-063r5.html"
                    type: string
                horizontal:
                    $ref: '#/components/schemas/horizontal'
                vertical:
                    $ref: '#/components/schemas/vertical'
                temporal:
                    $ref: '#/components/schemas/temporal'
            example: {"dimensions": {"x": 92,"y": 33,"z": 8,"time": 98},
    "wkt": "GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.01745329251994328,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"],TIMEEXTENT[2019-05-28T06:00:00Z,2019-05-30T06:00:00Z],VERTICALEXTENT[2.0,2.0,LENGTHUNIT[\"metre\",1.0]]]",
    "horizontal": {"name": ["longitude","latitude"],"coordinates": ["x","y"],"geographic": "BBOX[359.875,90.125,-0.125,-90.125]"},"vertical": {"name": ["height_above_ground"],"coordinates": ["z"],"range": [36.47,99.07]},"temporal": {"name": "time","coordinates": ["time"],"range": ["2019-05-28T06:00:00Z","2019-05-28T18:00:00Z","2019-05-29T06:00:00Z","2019-05-29T18:00:00Z","2019-05-30T06:00:00Z"]}}
        dimension:
            title: 'Root Type for dimension'
            description: 'definition of the resolution of the collection'
            required:
                - x
                - y
            type: object
            properties:
                x:
                    format: int32
                    description: 'x coordinate resolution'
                    type: integer
                y:
                    format: int32
                    description: 'y coordinate resolution'
                    type: integer
                z:
                    format: int32
                    description: 'vertical level resolution'
                    type: integer
                time:
                    format: int32
                    description: 'Time step resolution'
                    type: integer
            example: {"x": 720,"y": 360,"z": 1,"time": 5}
        horizontal:
            title: 'Root Type for horizontal'
            description: 'Definition of the spatial aspects of the collection'
            required:
                - coordinates
                - geographic
            type: object
            properties:
                name:
                    description: 'A list of the names of the coordinates MUST be in the same order as the values in the coordinates array'
                    type: array
                    items: {}
                coordinates:
                    description: 'A list of the coordinates'
                    type: array
                    items:
                        type: string
                        
                
                geographic:
                    description: 'Definition of the area covered by the collection as a Well Know Text Bounding Box'
                    type: string
            example: {"name": ["longitude","latitude"],"coordinates": ["x","y"],"geographic": "BBOX[359.875,90.125,-0.125,-90.125]"}
        vertical:
            title: 'Root Type for vertical'
            description: 'Description of the vertical dimensions of the collection '
            required:
                - name
                - coordinates
                - range
            type: object
            properties:
                name:
                    description: 'Name of the coordinates'
                    type: array
                    items:
                        type: string
                coordinates:
                    description: coordinate
                    type: array
                    items:
                        type: string
                range:
                    type: array
                    items:
                        type: number
            example: {"name": ["height_above_ground"],"coordinates": ["z"],"range": [2]}
        temporal:
            title: 'Root Type for temporal'
            description: 'Description of the time dimensions of the collection'
            required:
                - coordinates
                - name
                - range
            type: object
            properties:
                name:
                    description: 'Array of coordinate names MUST be in the same order as the coordinates array'
                    type: string
                coordinates:
                    description: 'Coordinate axes names'
                    type: array
                    items:
                        type: string
                range:
                    description: 'List of the available time dimension values in the collection'
                    type: array
                    items:
                        type: string
            example: {"name": "time","coordinates": ["time"],"range": ["2019-05-28T06:00:00Z","2019-05-28T18:00:00Z","2019-05-29T06:00:00Z","2019-05-29T18:00:00Z","2019-05-30T06:00:00Z"]}
        Parameter:
            title: 'Root Type for Parameter'
            description: 'Definition of data parameter'
            required:
                - type
                - unit
                - description
                - observedProperty
                - id
            type: object
            properties:
                type:
                    description: type
                    enum:
                        - Parameter
                description:
                    $ref: '#/components/schemas/descriptionInfo'
                unit:
                    $ref: '#/components/schemas/units'
                observedProperty:
                    $ref: '#/components/schemas/ObservedProperty'
                id:
                    description: 'Unique ID of the parameter, this is the value used for querying the data'
                    type: string
            example: {"type" : "Parameter","id" : "sea_ice","description": {"en": "Sea Ice concentration (ice=1;no ice=0)"},"unit" : {"label": {"en": "Ratio"},"symbol": {"value": "1","type": "http://www.opengis.net/def/uom/UCUM/"}},"observedProperty" : {"id" : "http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/","label" : {"en": "Sea Ice Concentration"}}}
        units:
            title: 'Root Type for units'
            description: 'definition of data units'
            required:
                - symbol
                - label
            type: object
            properties:
                label:
                  type: object
                  additionalProperties:
                    type: string
                symbol:
                    $ref: '#/components/schemas/symbol'
            example: {"label": {"en": "<unit Label>"},"symbol": {"value": "<unit symbol>","type": "<href to unit metadata description>"}}
        symbol:
            title: 'Root Type for symbol'
            description: 'Information about the symbol used to describe the units'
            required:
                - value
                - type
            type: object
            properties:
                value:
                   type: string
            example: {"value": "hPa","type": "http://www.opengis.net/def/uom/UCUM/"}
        descriptionInfo:
            required:
                - summary
                - created
                - axes
            type: object
            properties:
                summary:
                    description: 'brief description of the collection'
                    type: string
                created:
                    format: dateTime
                    description: 'time that the coverage collection was created/modified'
                    type: string
                axes:
                    $ref: '#/components/schemas/axesInfo'
        axesInfo:
            required:
                - x
                - y
                - t
            type: object
            properties:
                x:
                    $ref: '#/components/schemas/axesDefInfo'
                y:
                    $ref: '#/components/schemas/axesDefInfo'
                z:
                    $ref: '#/components/schemas/axesListDefInfo'
                t:
                    $ref: '#/components/schemas/axesDefInfo'
            example: {"x": {"units": "some text","lowerBound": "some text","upperBound": "some text"},"y": {"units": "some text","lowerBound": "some text","upperBound": "some text"},"z": {"units": "some text","values": ["some text","some text"]},"t": {"units": "some text","lowerBound":"some text","upperBound": "some text"}}
        axesDefInfo:
            description: 'Definition of the axis coordinate range'
            required:
                - units
                - lowerBound
                - upperBound
            type: object
            properties:
                units:
                    $ref: '#/components/schemas/units'
                lowerBound:
                    description: 'minimum value of the axes'
                    type: string
                upperBound:
                    description: 'maximum value of the axes'
                    type: string
            example: {"units": {"label": {"en": "some text"},"symbol": {"value": "some text","type": "some text"}},"lowerBound": "some text","upperBound": "some text"}
        axesListDefInfo:
            description: 'Definition for those axis which are not based on regular intervals'
            required:
                - units
                - values
            type: object
            properties:
                units:
                    $ref: '#/components/schemas/units'
                values:
                    description: 'list of the valid values for the axis'
                    type: array
                    items:
                        type: string
            example: {"units": {"label": {"en": "some text"},"symbol": {"value": "some text","type": "some text"}},"values": ["some text","some text"]}
        ObservedProperty:
            title: 'Root Type for ObservedProperty'
            description: 'Observed property detail'
            required:
                - id
                - label
            type: object
            properties:
                id:
                    description: "URI linking to an external registry which contains the definitive definition of\nthe observed property"
                    type: string
                label:
                    $ref: '#/components/schemas/descriptionInfo'
            example: {"id": "http://vocab.nerc.ac.uk/standard_name/sea_ice_area_fraction/","label": {"en": "Sea Ice Concentration"}}
        CoverageJSON:
            title: 'Root Type for CoverageJSON'
            description: 'JSON output format '
            required:
                - type
                - domain
                - parameters
                - ranges
            type: object
            properties:
                type:
                    description: 'Coverage domain type'
                    enum:
                        - Coverage
                domain:
                    $ref: '#/components/schemas/Domain'
                parameters:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Parameter'
                ranges:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/range'

        Domain:
            title: 'Root Type for Domain'
            description: 'Coverage geotemporal area description'
            required:
                - axes
                - domainType
                - type
            type: object
            properties:
                type:
                    description: Type
                    enum:
                        - Domain
                domainType:
                    description: 'Domain type'
                    enum:
                        - Grid
                axes:
                    $ref: '#/components/schemas/axes'

            example: {"type" : "Domain","domainType" : "Grid","axes": {"x" : {"values": [-10,-5,0] },"y" : {"values": [40,50] },"z" : {"values": [ 5] },"t" : {"values": ["2010-01-01T00:12:20Z"] }}}
        axes:
            title: 'Root Type for axes'
            description: 'geotemporal axes for a CoverageJSON domain'
            required:
                - t
                - x
                - y
            type: object
            properties:
                x:
                    $ref: '#/components/schemas/numeric_axis_values'
                y:
                    $ref: '#/components/schemas/numeric_axis_values'
                z:
                    description: 'Z axis coordinates'
                    type: array
                    items:
                        $ref: '#/components/schemas/string_axis_values'
                    properties:
                        values:
                            type: array
                            items: {}
                t:
                    $ref: '#/components/schemas/string_axis_values'
            example: {"x": {"values": [-10,-5,0]},"y": {"values": [40,50]},"z": {"values": [5]},"t": {"values": ["2010-01-01T00:12:20Z"]}}
        numeric_axis_values:
            title: 'Root Type for numeric_axis_values'
            description: 'numeric coordinates definition'
            required:
                - values
            type: object
            properties:
                values:
                    description: 'Array of numeric values'
                    type: array
                    items:
                        type: number
            example: [-10,-5,0]
        string_axis_values:
            title: 'Root Type for numeric_axis_values'
            description: 'string coordinates definition'
            required:
                - values
            type: object
            properties:
                values:
                    description: 'Array of numeric values'
                    type: array
                    items:
                        type: string
            example: ["2010-01-01T00:12:20Z","2010-01-02T00:12:20Z"]
        range:
            title: 'Root Type for range'
            description: 'Data values for a parameter'
            required:
                - type
                - dataType
                - values
                - axisNames
            type: object
            properties:
                type:
                    description: 'Definition of the data structure'
                    enum:
                        - NdArray
                dataType:
                    description: 'Format of the data values in the array'
                    enum:
                        - int
                        - long
                        - float
                        - double
                        - string
                axisNames:
                    description: 'References to the axes the data values map to'
                    type: array
                    items:
                        type: string
                shape:
                    description: 'Structure of the array data'
                    type: array
                    items:
                        type: number
                values:
                    description: 'Parameter data values'
                    type: array
                    items: {}
            example: {"type" : "NdArray","dataType": "float","axisNames": ["t","z","y","x"],"shape": [1, 1, 2, 3],"values" : [ 0.5, 0.6, 0.4, 0.6, 0.2, null ]}
        outputCRS:
            description: 'Coordinate reference system definition as Well Known text'
            type: object
            properties:
              id:
                description: 'unique identifier for the coordinate reference system'
                type: string
              wkt:
                description: 'Well known text definition of the coordinate reference system'
                type: string
    parameters:
        bbox:
            name: bbox
            in: query
            description: "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (elevation or depth):\n* Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Lower left corner, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Upper right corner, coordinate axis 3 (optional)\nThe coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.\nFor WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).\nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.\n"
            required: false
            style: form
            explode: false
            schema:
                maxItems: 6
                minItems: 4
                type: array
                items:
                    type: number
        time:
            name: time
            in: query
            description: "Either a date-time or a period string that adheres to RFC 3339. Examples:\n* A date-time: \"2018-02-12T23:20:50Z\" * A period: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\" or \"2018-02-12T00:00:00Z/P1M6DT12H31M12S\"\nOnly features that have a temporal property that intersects the value of `time` are selected.\nIf a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties."
            required: false
            style: form
            explode: false
            schema:
                type: string
        collectionId:
            name: collectionId
            in: path
            description: 'Identifier (id) of a specific collection'
            required: true
            schema:
                type: string
        groupId:
            name: groupId
            in: path
            description: 'Identifier (name) of a specific group'
            required: true
            schema:
                type: string
        instanceId:
            name: instanceId
            in: path
            description: 'Identifier (id) of a specific instance of a collection'
            required: true
            schema:
                type: string
        outputFormat:
            name: outputFormat
            in: query
            description: 'Format to return query results in'
            required: false
            schema:
                type: string

tags:
    -
        name: Capabilities
        description: 'Essential characteristics of the information available from the API.'
    -
        name: Metadata
        description: 'Essential characteristics of the collection including information about the data.'
    -
        name: Data
        description: 'Data queries.'
